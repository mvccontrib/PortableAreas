<?xml version="1.0" encoding="utf-8"?>
<project name="PortableArea" default="build" xmlns="http://nant.sf.net/release/0.85/nant.xsd">


	<target name="build" depends="clean, init, commonassemblyinfo, compile, move-for-test, test"/>
	<target name="cruise" depends="build, package"/>
	<target name="commiter" depends="build, package"/>


	<property name="solution.dir" value="src"/>
	<property name="solution.file" value="${solution.dir}/PortableArea.sln"/>
	<property name="trunk.dir" value="."/>
	<property name="company.name" value="MVC Contrib"/>
	<property name="bin.dir" value="bin" />
	<property name="build.base" value="build"/>
	<property name="results.dir" value="${build.base}\results" />

	<property name="project.fullversion" value="2.0.0.99" />
	<property name="project.fullversion" value="${build.number}" if="${property::exists('build.number')}"/>
	<property name="nant.settings.currentframework" value="net-3.5" />
	<property name="msbuild.path" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
	<property name="nunit.path" value="lib\nunit\nunit-console-x86.exe" />
	<property name="runtests" value="true" unless="${property::exists('runtests')}" />
	
	<!-- default configuration -->
	<property name="project.config" value="release" />
	<!-- debug|release -->
	<property name="build.dir" value="${build.base}/${nant.settings.currentframework}.${platform::get-name()}-${project::get-name()}-${project.config}/"/>


	<target name="init" description="Initializes build properties">
		<tstamp>
			<formatter property="datetime.buildtime" pattern="yyyy-MM-dd, HH:mm:ss" />
		</tstamp>
		<delete dir="${build.base}"/>
		<mkdir dir="${build.dir}" />
		<echo message="Current Directory: ${project::get-base-directory()}"/>
	</target>

	<target name="clean" description="delete build artifacts">
		<delete dir="${build.dir}" failonerror="false" />
	</target>

	<target name="commonassemblyinfo" depends="init">
		<echo message="MARKING THIS BUILD AS VERSION ${project.fullversion}" />
		<delete file="${solution.dir}/CommonAssemblyInfo.cs" failonerror="false"/>
		<asminfo output="${solution.dir}/CommonAssemblyInfo.cs" language="CSharp">
			<imports>
				<import namespace="System" />
				<import namespace="System.Reflection" />
				<import namespace="System.Runtime.InteropServices" />
			</imports>
			<attributes>
				<attribute type="ComVisibleAttribute" value="false" />
				<attribute type="AssemblyVersionAttribute" value="${project.fullversion}" />
				<attribute type="AssemblyFileVersionAttribute" value="${project.fullversion}" />
				<attribute type="AssemblyCopyrightAttribute" value="Copyright © ${company.name} 2007-${datetime::get-year(datetime::now())}" />
				<attribute type="AssemblyProductAttribute" value="${project::get-name()} 1.5 RC" />
				<attribute type="AssemblyCompanyAttribute" value="${company.name}" />
				<attribute type="AssemblyConfigurationAttribute" value="${project.config}" />
				<attribute type="AssemblyInformationalVersionAttribute" value="${project.fullversion}" />
			</attributes>
			<references>
				<include name="System.dll" />
			</references>
		</asminfo>
	</target>
	<target name="compile" depends="init">
		<echo message="Build Directory is ${build.dir}" />
		<exec program="${msbuild.path}" commandline="${solution.file} /t:Clean /p:Configuration=${project.config} /v:q" workingdir="." />
		<exec program="${msbuild.path}" commandline="${solution.file} /t:Rebuild /p:Configuration=${project.config} /v:q" workingdir="." />
	</target>

	<target name="move-for-test">
		<delete dir="${build.dir}"/>
		<copy todir="${build.dir}" flatten="true">
			<fileset basedir="${solution.dir}">
				<include name="/**/bin/${project.config}/**" />
				<include name="*.config"/>
			</fileset>
		</copy>
	</target>

	<target name="test" depends="init" if="${runtests}">
		<delete dir="${results.dir}" if="${directory::exists('${results.dir}')}" verbose="true" />
		<mkdir dir="${results.dir}"/>
		<exec verbose="true" program="${nunit.path}" 
			commandline="LoginPortableArea.Tests.dll /xml:..\..\${results.dir}\TestResult.xml /noshadow" 
			workingdir="${build.dir}" />
	</target>

	<target name="package">

		<delete dir="${build.base}/release/" failonerror="false"></delete>
		<mkdir dir="${build.base}/release/" />
		<property name="ContribRelease" value="${build.base}/release/MvcContrib/"/>
		<mkdir dir="${ContribRelease}" />    
		<copy todir="${ContribRelease}" flatten="true">
			<fileset basedir="${solution.dir}">
				<include name="/**/bin/${project.config}/*portablearea.dll" />
				<exclude name="/**/bin/${project.config}/*test*.xml" />
			</fileset>
		</copy>
		<copy todir="${ContribRelease}" >
			<fileset basedir=".">
				<include name="license.txt" />
			</fileset>
		</copy>

		<mkdir dir="${ContribRelease}Dependencies/" />
		<copy todir="${ContribRelease}Dependencies/" flatten="true">
			<fileset basedir="${solution.dir}">
				<include name="/**/bin/${project.config}/MvcContrib.dll" />
			</fileset>
		</copy>

		<zip zipfile="build/PortableArea.release.zip" includeemptydirs="false" >
			<fileset basedir="${ContribRelease}">
				<include name="license.txt" />
				<include name="**/*.*"/>
				<exclude name="**/*.CodeAnalysisLog.xml"/>
				<exclude name="**/*.lastcodeanalysissucceeded"/>
			</fileset>
		</zip>


		<zip zipfile="build/PortableArea.source.zip" includeemptydirs="false" >
			<fileset basedir="${trunk.dir}" >
				<exclude name=".git/**"/>
				<!--<exclude name="**/LatestVersion/**"/>-->
				<exclude name="**/build/**"/>
				<exclude name="src/**/bin/**"/>
				<exclude name="**/obj/**"/>
				<exclude name="**/*.resharper*"/>
				<exclude name="**/*.suo"/>
				<exclude name="**/*.cache"/>
				<exclude name="**/*.user"/>
				<exclude name="**/_ReSharper*/**"/>
				<exclude name="**/*.CodeAnalysisLog.xml"/>
				<exclude name="**/*.lastcodeanalysissucceeded"/>
				<include name="**/*.*"/>
			</fileset>
		</zip>
	</target>
</project>
